version: '3.5'

services:
  app-frontend:
    container_name: apm-demo-app-frontend
    image: app-frontend
    build:
      context: app/frontend/
      args:
        - NGINX_VERSION=$NGINX_VERSION
    volumes:
      - ./app/frontend/www:/usr/share/nginx/html:ro
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "80:80"
    networks:
      - frontend

  # app-middleware:
  #   container_name: apm-demo-app-middleware
  #   image: app-frontend
  #   build:
  #     context: app/frontend/
  #   mem_limit: 512m
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - frontend
  #     - backend 

  elasticsearch:
    container_name: apm-demo-elasticsearch
    image: elasticsearch:$ELASTIC_VERSION
    build:
      context: elastic/elasticsearch/
      args:
        - ELASTIC_VERSION=$ELASTIC_VERSION
    volumes:
      - ./elastic/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - apm-demo-elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
    networks:
      - backend 

  kibana:
    container_name: apm-demo-kibana
    image: kibana:$ELASTIC_VERSION
    build:
      context: elastic/kibana/
      args:
        - ELASTIC_VERSION=$ELASTIC_VERSION
    volumes:
      - ./elastic/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - frontend
      - backend
    depends_on:
      - elasticsearch

  apm-server:
    container_name: apm-demo-apm-server
    image: apm-server:$ELASTIC_VERSION
    build:
      context: elastic/apm-server/
      args:
        - ELASTIC_VERSION=$ELASTIC_VERSION
    volumes:
      - ./elastic/apm-server/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - backend
    depends_on:
      - elasticsearch

networks:
  frontend:
  backend:

volumes:
  apm-demo-elasticsearch_data:
    name: apm-demo-elasticsearch_data
